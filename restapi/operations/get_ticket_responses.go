package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"github.com/masahide/fastpass/models"
)

/*GetTicketOK 発券されている

swagger:response getTicketOK
*/
type GetTicketOK struct {

	// In: body
	Payload *models.Ticket `json:"body,omitempty"`
}

// NewGetTicketOK creates GetTicketOK with default headers values
func NewGetTicketOK() *GetTicketOK {
	return &GetTicketOK{}
}

// WithPayload adds the payload to the get ticket o k response
func (o *GetTicketOK) WithPayload(payload *models.Ticket) *GetTicketOK {
	o.Payload = payload
	return o
}

// WriteResponse to the client
func (o *GetTicketOK) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetTicketNotFound 発券されていない

swagger:response getTicketNotFound
*/
type GetTicketNotFound struct {
}

// NewGetTicketNotFound creates GetTicketNotFound with default headers values
func NewGetTicketNotFound() *GetTicketNotFound {
	return &GetTicketNotFound{}
}

// WriteResponse to the client
func (o *GetTicketNotFound) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(404)
}

/*GetTicketInternalServerError unexpected error

swagger:response getTicketInternalServerError
*/
type GetTicketInternalServerError struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTicketInternalServerError creates GetTicketInternalServerError with default headers values
func NewGetTicketInternalServerError() *GetTicketInternalServerError {
	return &GetTicketInternalServerError{}
}

// WithPayload adds the payload to the get ticket internal server error response
func (o *GetTicketInternalServerError) WithPayload(payload *models.Error) *GetTicketInternalServerError {
	o.Payload = payload
	return o
}

// WriteResponse to the client
func (o *GetTicketInternalServerError) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
